name: Build and Deploy

on:
  push:
    branches:
      - deploy
        
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: my-app-deploy-bucket
  CODE_DEPLOY_APPLICATION_NAME: my-spring-vue-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-app-deployment-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Move build to Spring Boot static folder
      run: |
        find ./src/main/resources/* -not -name 'application.yml' -delete
        mkdir ./src/main/resources/static
        cp -r ./frontend/build/* ./src/main/resources/static/

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build Spring Boot application
      run: |
        chmod +x ./gradlew
        ./gradlew build -x test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GBPARK_ACC_KEY }}
        aws-secret-access-key: ${{ secrets.GBPARK_ACC_SEC_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload JAR and scripts to S3
      run: |
        aws s3 cp ./build/libs/gbpark.jar s3://${{ env.S3_BUCKET_NAME }}/gbpark.jar
        aws s3 cp ./scripts s3://${{ env.S3_BUCKET_NAME }}/scripts --recursive
        echo '{"files":[{"source":"gbpark.jar","destination":"/home/ec2-user/app"},{"source":"scripts","destination":"/home/ec2-user/app/scripts"}]}' > appspec.json
        aws s3 cp appspec.json s3://${{ env.S3_BUCKET_NAME }}/appspec.json

    - name: Deploy to EC2 via CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=appspec.json,bundleType=JSON